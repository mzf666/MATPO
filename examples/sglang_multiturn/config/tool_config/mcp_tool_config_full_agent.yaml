tools:
  - class_name: "verl.tools.mcp_tool.MCPTool"
    config:
      command: "serper-mcp"
      args: []
      env: ["SERPER_API_KEY", "HTTPS_PROXY"]
      server_name: "search_and_scrape_webpage"
    tool_schema:
      type: "mcp"
      function: {}
  # - class_name: "verl.tools.mcp_tool.MCPTool"
  #   config:
  #     command: "python3"
  #     args: ["verl/tools/python_server.py"]
  #     env: ["E2B_API_KEY", "HTTPS_PROXY"]
  #     server_name: "python_interpreter"
  #   tool_schema:
  #     type: "mcp"
  #     function: {}
  # - class_name: "verl.tools.mcp_tool.MCPTool"
  #   config:
  #     command: "python3"
  #     args: ["verl/tools/vision_mcp_server.py"]
  #     env: ["ANTHROPIC_API_KEY", "HTTPS_PROXY"]
  #     server_name: "tool-vqa"
  #   tool_schema:
  #     type: "mcp"
  #     function: {}
  # - class_name: "verl.tools.mcp_tool.MCPTool"
  #   config:
  #     command: "python3"
  #     args: ["verl/tools/audio_mcp_server.py"]
  #     env: ["OPENAI_API_KEY", "HTTPS_PROXY"]
  #     server_name: "tool-transcribe"
  #   tool_schema:
  #     type: "mcp"
  #     function: {}
  # - class_name: "verl.tools.mcp_tool.MCPTool"
  #   config:
  #     command: "python3"
  #     args: ["verl/tools/reasoning_mcp_server.py"]
  #     env: ["ANTHROPIC_API_KEY", "HTTPS_PROXY"]
  #     server_name: "tool-reasoning"
  #   tool_schema:
  #     type: "mcp"
  #     function: {}
  # - class_name: "verl.tools.mcp_tool.MCPTool"
  #   config:
  #     command: "markitdown-mcp"
  #     server_name: "tool-file-reader"
  #   tool_schema:
  #     type: "mcp"
  #     function: {}

  - class_name: "verl.tools.mcp_tool.MCPTool"
    config:
      command: ""
      server_name: "browsing_agent"
    tool_schema:
      type: "agent"
      function: {}
      schema:
        name: "search_and_browse"
        description: "This tool is an agent that performs the subtask of searching and browsing the web for specific missing information and generating the desired answer. The subtask should be clearly defined, include relevant background, and focus on factual gaps. It does not perform vague or speculative subtasks. \nArgs: \n\tsubtask: the subtask to be performed. \nReturns: \n\tthe result of the subtask."
        parameters:
          properties:
            subtask:
              title: "Subtask"
              type: "string"
          required:
            - "subtask"
          title: "search_and_browseArguments"
          type: "object"
        server_name: "browsing_agent"

agents:
  - agent_type: "main_agent"
    tools:
      - browsing_agent
  - agent_type: "browsing_agent"
    tools:
      - search_and_scrape_webpage